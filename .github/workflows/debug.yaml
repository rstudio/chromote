on:
  push:
    branches:
      - gha

name: debug

jobs:
  debug:
    runs-on: ubuntu-20.04
    env:
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/bionic/latest
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        id: install-r

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps("local::.", dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}/*
            !${{ env.R_LIBS_USER }}/pak
          key: ubuntu-20.04-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ubuntu-20.04-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          pak::local_system_requirements(execute = TRUE)
          pak::pkg_system_requirements("pkgdown", execute = TRUE)
        shell: Rscript {0}
      - name: Install system dependencies
        if: runner.os == 'Linux'
        shell: bash
        run: |
          which google-chrome

      - name: Install dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE, dependencies = c("all", "Config/Needs/website"))
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: Debug
        shell: Rscript {0}
        run: |
          library(chromote)
          # Make session
          b <- ChromoteSession$new()

          print(system("id"))

          # set_default_chromote_object(
          #   Chromote$new(
          #     Chrome$new(
          #       args = c(
          #         "--disable-gpu",
          #         "--no-sandbox",
          #         "--disable-dev-shm-usage", # required bc the target easily crashes
          #         # c("--force-color-profile", "srgb"),
          #         NULL
          #       )
          #     )
          #   )
          # )

          # Download google.com
          b$Page$navigate("https://www.rstudio.com/")

          # Get the outer HTML of the document
          outerHTML <- b$DOM$getOuterHTML(b$DOM$getDocument()$root$nodeId)$outerHTML
          print(outerHTML)

          # Yell if it doesn't find the close `html` tag; close tag is more consistent
          stopifnot(grepl("</html>", outerHTML, fixed = TRUE))

      - name: Upload folder
        uses: actions/upload-artifact@main
        if: always()
        with:
          name: debug-results
          path: ./
